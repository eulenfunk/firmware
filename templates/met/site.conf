-- Configuration Template for Neanderfunk / Eulenfunk - Gluon 2018.2.x 
{
  hostname_prefix = 'ME-',
  site_name = 'Freifunk Mettmann',
  site_code = 'ffnef-met',
  
  domain_names = { ['ffnef_met'] = 'Mettmann' },
  domain_seed = '34f5feee21fac14d778cced7e05e1287ad520ed4a18d5f4cb17616f147c9fb8d',
  
  config_mode = {
    hostname = {
      optional = false,
    },
    -- Show/hide the altitude field
    -- gluon 2018.2.x
    geo_location = {
      show_altitude = true,
      osm = {
      center = {
        lat = 51.250070378,
        lon = 6.976833344,
      },
      zoom = 12,
       --- openlayers_url = 'https://tiles.ffdus.de/cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png',
      },
    },

   
    -- define if the contact field is obligatory (optional)
    -- disabled in 2017.1.8
    owner = {
      optional = true,
    },
    remote_login = {
      show_password_form = true,
      min_password_length = 10,
    },
  },
  
  setup_mode = {
    skip = false,
  },
  authorized_keys = { '', },
  
  opkg = {
    openwrt = 'http://opkg.services.ffnef/openwrt/snapshots/packages/%A',
    extra = {
      gluon = 'http://download.ffnef.de/firmware/modules/gluon-%GS-%GR/%S',
    },
  },
  
  prefix4 = '10.1.192.0/20',
  prefix6 = '2a03:2260:300e:1100::/64',
  extra_prefixes6 = {
    -- for ebtables-source-filter
    '2a03:2260::/29',
    'fda0:300e::/32',
  },
  
  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',
  
  ntp_servers = {
    'ntp.ffnef.de',
    'ntp.ffdus.freifunk',
    '0.openwrt.pool.ntp.org',
    '1.openwrt.pool.ntp.org',
  },
  regdom = 'DE',
  
  wifi24 = {
    channel = 13,
    preserve_channels = 1,
    country = 'DE', 
    htmode = 'HT40+',
    purge_txpower = false,
    htmode_noscan = true,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'ffnef-met-mesh',
      mcast_rate = 12000,
      disabled = false,
    },
  },
  wifi5 = {
    channel = 44,
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'ffnef-met-mesh',
      mcast_rate = 12000,
      disabled = false,
      htmode = HT40,
      ac_htmode = VHT80,
      purge_txpower = true,
      htmode_noscan = true,
    },
  },
  
  next_node = {
    name = {
      'nextnode',
      'nn',
    },
    -- anycast IPs of all nodes
    ip4 = '10.1.192.255',
    ip6 = '2a03:2260:300e:1100::ffff',
    -- anycast MAC of all nodes
    mac = '10:80:f4:66:82:9f',
  },
  
  mesh_on_lan = true,
  mesh_on_wan = false,
  poe_passthrough = true,
  
  -- Options specific to routing protocols (optional)
  mesh = {
      vxlan = false,
      filter_membership_reports = true,
      -- Options specific to the batman-adv routing protocol (optional)
      batman_adv = {
          -- Gateway selection class (optional)
          -- The default class 20 is based on the link quality (TQ) only,
          -- class 1 is calculated from both the TQ and the announced bandwidth
          gw_sel_class = 1,
      },
  },
  
  mesh_vpn = {
    mtu = 1364,
    enabled = true,
    fastd = {
      methods = {'salsa2012+umac'},
      groups = {
        backbone = {
          limit = 1,
          peers = {
                
            fastd1_ffnef_met_ffnef_de = {
              key = 'efd2155bf25585788ae333bd228ec960c4ce6d100dd3c0ad5f08e88adf516059',
              remotes = {'"fastd1.ffnef-met.ffnef.de" port 63974'},
            },
          
            fastd2_ffnef_met_ffnef_de = {
              key = '65071e80af35865830c5e5014c1279bf7b7bd2bcc06b9f721137ee1f624ce4d4',
              remotes = {'"fastd2.ffnef-met.ffnef.de" port 63974'},
            },
            
            fastd3_ffnef_met_ffnef_de = {
              key = '0c3131778981c318135e0f552d747c513f0589ac9a214ad75731c8455a442c20',
              remotes = {'"fastd3.ffnef-met.ffnef.de" port 63974'},
            },

            fastd4_ffnef_met_ffnef_de = {
              key = 'dd43a7d1c3f893ec67f13aca90bb5be2d449e8a83e943869f240b1f99ca7297a',
              remotes = {'"fastd4.ffnef-met.ffnef.de" port 63974'},
            },
          },
        },
      },
    },
    bandwidth_limit = {
      enabled = false,
      egress =  2000,
      ingress = 8000,
    },
  },
  autoupdater = {
    enabled = 1,
    branch = 'RELBRANCH',
    branches = {
      stable = {
        name = 'stable',
        mirrors = { 
          'http://firmware.ffnef-met.ffnef.de/firmware/stable/ffnef-met/sysupgrade',
          'http://firmware.ffnef-met.ffnef/firmware/stable/ffnef-met/sysupgrade',
          'http://firmware.ffnef.de/firmware/stable/ffnef-met/sysupgrade',
          'http://[2a03:2260:300e:1100::733]/firmware/stable/ffnef-met/sysupgrade',
        },
        good_signatures = 2,
        pubkeys = {
          'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
          'bbc64c35bfc527f193e5551abd4fbef3940c44ebf75bdd829220b39913330d88', -- Jonathan
          '2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
          'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
          '7afe187ceb34e83b2cb33c244ab5c8a7e80829c3e83b8d3fc471d2642eb6a602', -- limlug
          '96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
          'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
        },
      },
      beta = {
        name = 'beta',
        mirrors = { 
           'http://firmware.ffnef-met.ffnef.de/firmware/beta/ffnef-met/sysupgrade',
          'http://firmware.ffnef-met.ffnef/firmware/beta/ffnef-met/sysupgrade',
          'http://firmware.ffnef.de/firmware/beta/ffnef-met/sysupgrade',
          'http://[2a03:2260:300e:1100::733]/firmware/beta/ffnef-met/sysupgrade',
        },
        good_signatures = 1,
        
        pubkeys = {
          'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
          'e2f48369e2bd55780908c06f2d10318f2844676c44ec3e70b4a9b8635b2a09d6', -- Benedikt Wi
          'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
          '2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
          'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
          '7afe187ceb34e83b2cb33c244ab5c8a7e80829c3e83b8d3fc471d2642eb6a602', -- limlug
          '96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
      experimental = {
        name = 'experimental',
        mirrors = { 
          'http://firmware.ffnef-met.ffnef.de/firmware/broken/ffnef-met/sysupgrade',
          'http://firmware.ffnef-met.ffnef/firmware/broken/ffnef-met/sysupgrade',
          'http://firmware.ffnef.de/firmware/broken/ffnef-met/images/sysupgrade',
          'http://[2a03:2260:300e:1100::733]/firmware/broken/ffnef-met/sysupgrade',
        },
        good_signatures = 1,
        
        pubkeys = {
          'dd6a9d1aefc175f885705691498e904cbda12cc4602316f04816d78026c7c0f0', -- Benedikt Wi
          'e2f48369e2bd55780908c06f2d10318f2844676c44ec3e70b4a9b8635b2a09d6', -- Benedikt Wi
          'fb919d4adc69bd404f5093ce6b43badf351f9e642ad458406be986baf6096247', -- PetaByteBoy
          '2a61930930a240c027f6ca4197203d400b6e4a32f9e92041e5f086907796c9bc', -- adorfer
          'd02f8e60fb7a5069556500694ebe512b6017b01e9950476e4cfcf10d5130c296', -- JJX
          '7afe187ceb34e83b2cb33c244ab5c8a7e80829c3e83b8d3fc471d2642eb6a602', -- limlug
          '96d644ff1ce07d6f67d9329a0eb9a1548d0d01a3519d17ec1fe9d49da3270bfc', -- plaste
        },
      },
    },
  },
  roguenets_filter = {
    allowed_prefix4 = '10.1.192.0/20',
    allowed_prefix6 = '2a03:2260::/29',
    additional_prefix6 = {
      'fda0:300e::/32',
    },
  },
  dns = {
    cacheentries = 512,
    servers = {  '2a03:2260:300e:1100::3', '2620:fe::10', '2001:4860:4860::8844', '2001:4860:4860::8888', },
  },

  ssid_changer = {
    enabled = true,
    switch_timeframe = 1,     -- only once every timeframe (in minutes) the SSID will change to OFFLINE 
                              -- set to 1440 to change once a day
                              -- set to 1 minute to change every time the router gets offline
    first = 5,                -- the first few minutes directly after reboot within which an Offline-SSID always may be activated
    prefix = 'FF_Offline_',   -- use something short to leave space for the nodename (no '~' allowed!)
    suffix = 'nodename',      -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'
    
    tq_limit_enabled = true,  -- if false, the offline SSID will only be set if there is no gateway reacheable
                              -- upper and lower limit to turn the offline_ssid on and off
                              -- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
    tq_limit_max = 45,        -- upper limit, above that the online SSID will be used
    tq_limit_min = 35         -- lower limit, below that the offline SSID will be used
  },
}
