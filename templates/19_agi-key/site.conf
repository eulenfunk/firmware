-- Configuration Template for Neanderfunk / Eulenfunk - Gluon 2021.1.x
{
  hostname_prefix = 'SITEBIG-',
  site_name = 'DOMAINLONGNAME',
  site_code = 'METAPREFIX-DOMAINNR_SITESMALL',

  -- Must be the same of all nodes in one mesh domain
  domain_names = { ['FFPREFIXMETAPREFIX-DOMAINNRSITESMALL'] = 'DOMAINNAME' },
  domain_seed = 'DOMAINHASH',

  config_mode = {
    hostname = {
      optional = false,
    },
    -- Show/hide the altitude field
    -- gluon 2018.2.x
    geo_location = {
      show_altitude = true,
      osm = {
      center = {
        lat = MAPLAT,
        lon = MAPLON,
      },
      zoom = MAPZOOM,
       --- openlayers_url = 'https://tiles.ffdus.de/cartodb-basemaps-{s}.global.ssl.fastly.net/light_all/{z}/{x}/{y}.png',
      },
    },
    -- define if the contact field is obligatory (optional)
    -- disabled in 2017.1.8
    owner = {
      optional = true,
    },
    remote_login = {
      show_password_form = true,
      min_password_length = 12,
    },
  },

  setup_mode = {
    skip = SETUPSKIP,
  },
  authorized_keys = {
KEYFILESSH	
      },

  opkg = {
    openwrt = 'http://FFWEBSITEHOST.FFWEBSITETLD/firmware/packages/gluon2021.1.x/%A',
    extra = {
      gluonffnef = 'http://FFWEBSITEHOST.FFWEBSITETLD/firmware/modules/gluon-%GR/%S',
      openwrtpackages = 'http://downloads.openwrt.org/releases/19.07.8/packages/%A/packages',
      openwrtpackages2 = 'http://downloads.openwrt.org/releases/19.07.8/targets/%S/packages',
      openwrtbase = 'http://downloads.openwrt.org/releases/19.07.8/packages/%A/base',
      openwrttelephony = 'http://downloads.openwrt.org/releases/19.07.8/packages/%A/telephony',
      openwrtrouting = 'http://downloads.openwrt.org/releases/19.07.8/packages/%A/routing',
    },
  },

  prefix4 = '10.0.0.0/8',
  prefix6 = 'V6PREFIX::/64',
  extra_prefixes6 = {
    -- for ebtables-source-filter
    '2a03:2260::/32',
    'fda0:300e::/32',
  },

  timezone = 'CET-1CEST,M3.5.0,M10.5.0/3',

  ntp_servers = {
    'ntp6.FFWEBSITETLD',
    'ntp.ffnef.freifunk',
    '0.openwrt.pool.ntp.org',
    '2.openwrt.pool.ntp.org',
  },
  regdom = 'DE',

  wifi24 = {
    channel = WIFICH24,
    preserve_channels = 1,
    htmode = 'HT20',
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'MESHSID',
      mcast_rate = 12000,
      disabled = false,
    },
  },
  wifi5 = {
    channel = WIFICH5,
    outdoor_chanlist = '100-140',
    htmode = 'HT40',
    ap = {
      ssid = 'Freifunk',
    },
    mesh = {
      id = 'MESHSID',
      mcast_rate = 12000,
      disabled = false,
    },
  },

  next_node = {
    name = {
      'nextnode',
      'nn',
    },
    -- anycast IPs of all nodes
    ip4 = 'V4PREFIX.1',
    ip6 = 'V6PREFIX::1',
  },

  mesh_on_lan = true,
  mesh_on_wan = false,
  poe_passthrough = true,

  -- Options specific to routing protocols (optional)
  mesh = {
      vxlan = false,
      filter_membership_reports = true,
      -- Options specific to the batman-adv routing protocol (optional)
      batman_adv = {
          -- Gateway selection class (optional)
          -- The default class 20 is based on the link quality (TQ) only,
          -- class 1 is calculated from both the TQ and the announced bandwidth
          gw_sel_class = 1,
          routing_algo = 'BATMAN_IV',
      },
  },

  mesh_vpn = {
    mtu = 1364,
    enabled = true,
    tunneldigger = {
      brokers = {'ganymed.FFWEBSITETLD:200DOMAINNR','kallisto.FFWEBSITETLD:200DOMAINNR','amalthea.FFWEBSITETLD:200DOMAINNR','himalia.FFWEBSITETLD:200DOMAINNR','elara.FFWEBSITETLD:200DOMAINNR','pasophae.FFWEBSITETLD:200DOMAINNR'},
    },
    bandwidth_limit = {
      enabled = false,
      egress =  1000,
      ingress = 12000,
    },
  },

  autoupdater = {
    enabled = 1,
    branch = 'RELBRANCH',
    branches = {
      stable = {
        name = 'stable',
        mirrors = {
          'http://FFWEBSITEHOST.DOMAINNR-SITESMALL.FFWEBSITETLD/firmware/stable/DOMAINNR_SITESMALL/sysupgrade',
          'http://FFWEBSITEHOST.DOMAINNR-SITESMALL.ffnef/firmware/stable/DOMAINNR_SITESMALL/sysupgrade',
          'http://FFWEBSITEHOST.FFWEBSITETLD/firmware/stable/DOMAINNR_SITESMALL/sysupgrade',
          'http://[V6PREFIX::733]/firmware/stable/DOMAINNR_SITESMALL/sysupgrade',
        },
        good_signatures = 3,
        pubkeys = {
KEYFILESIGN
        },
      },
      broken = {
        name = 'broken',
        mirrors = {
          'http://FFWEBSITEHOST.DOMAINNR-SITESMALL.FFWEBSITETLD/firmware/broken/DOMAINNR_SITESMALL/sysupgrade',
          'http://FFWEBSITEHOST.DOMAINNR-SITESMALL.ffnef/firmware/broken/DOMAINNR_SITESMALL/sysupgrade',
          'http://FFWEBSITEHOST.FFWEBSITETLD/firmware/broken/DOMAINNR_SITESMALL/sysupgrade',
          'http://[V6PREFIX::733]/firmware/broken/DOMAINNR_SITESMALL/sysupgrade',
        },
        good_signatures = 1,
        pubkeys = {
KEYFILESIGN
        },
      },
    },
  },
  roguenets_filter = {
    allowed_prefix4 = '10.0.0.0/8',
    allowed_prefix6 = '2a0f:b507::/32',
    additional_prefix6 = {
      'fda0:300e::/32',
      '2a03:2260::/29',
    },
  },
  dns = {
    cacheentries = 1024,
    servers = { 'V6PREFIX::SUPERNODEDEFAULT','2620:fe::10', '2001:4860:4860::8844', '2001:4860:4860::8888', },
  },

  ssid_changer = {
    enabled = true,
    switch_timeframe = 2,     -- only once every timeframe (in minutes) the SSID will change to OFFLINE
                              -- set to 1440 to change once a day
                              -- set to 1 minute to change every time the router gets offline
    first = 5,                -- the first few minutes directly after reboot within which an Offline-SSID always may be activated
    prefix = 'FF_Offline_',   -- use something short to leave space for the nodename (no '~' allowed!)
    suffix = 'nodename',      -- generate the SSID with either 'nodename', 'mac' or to use only the prefix: 'none'

    tq_limit_enabled = true,  -- if false, the offline SSID will only be set if there is no gateway reacheable
                              -- upper and lower limit to turn the offline_ssid on and off
                              -- in-between these two values the SSID will never be changed to prevent it from toggeling every minute.
    tq_limit_max = 45,        -- upper limit, above that the online SSID will be used
    tq_limit_min = 35         -- lower limit, below that the offline SSID will be used
  },

  ath9kblackout = {
    blackoutwait = 171,
    resetwait = 281,
    stepsize = 10,
  },
}